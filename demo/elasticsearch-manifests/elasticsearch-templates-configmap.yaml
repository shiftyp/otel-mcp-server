apiVersion: v1
kind: ConfigMap
metadata:
  name: elasticsearch-templates
data:
  elasticsearch-otel-templates.json: |
    {
      "index_templates": [
        {
          "name": "logs-otel",
          "index_template": {
            "index_patterns": ["logs-*"],
            "template": {
              "settings": {
                "number_of_shards": 1,
                "number_of_replicas": 1
              },
              "mappings": {
                "dynamic_templates": [
                  {
                    "resource_attributes_strings": {
                      "path_match": "resource.attributes.*",
                      "match_mapping_type": "string",
                      "mapping": {
                        "type": "keyword"
                      }
                    }
                  },
                  {
                    "attributes_strings": {
                      "path_match": "attributes.*",
                      "match_mapping_type": "string",
                      "mapping": {
                        "type": "keyword"
                      }
                    }
                  }
                ]
              }
            },
            "data_stream": {
              "hidden": false
            }
          }
        },
        {
          "name": "metrics-otel",
          "index_template": {
            "index_patterns": ["metrics-*"],
            "template": {
              "settings": {
                "number_of_shards": 1,
                "number_of_replicas": 1
              },
              "mappings": {
                "dynamic_templates": [
                  {
                    "resource_attributes_strings": {
                      "path_match": "resource.attributes.*",
                      "match_mapping_type": "string",
                      "mapping": {
                        "type": "keyword"
                      }
                    }
                  },
                  {
                    "attributes_strings": {
                      "path_match": "attributes.*",
                      "match_mapping_type": "string",
                      "mapping": {
                        "type": "keyword"
                      }
                    }
                  }
                ]
              }
            },
            "data_stream": {
              "hidden": false
            }
          }
        },
        {
          "name": "traces-otel",
          "index_template": {
            "index_patterns": ["traces-*"],
            "template": {
              "settings": {
                "number_of_shards": 1,
                "number_of_replicas": 1
              },
              "mappings": {
                "dynamic_templates": [
                  {
                    "resource_attributes_strings": {
                      "path_match": "resource.attributes.*",
                      "match_mapping_type": "string",
                      "mapping": {
                        "type": "keyword"
                      }
                    }
                  },
                  {
                    "attributes_strings": {
                      "path_match": "attributes.*",
                      "match_mapping_type": "string",
                      "mapping": {
                        "type": "keyword"
                      }
                    }
                  }
                ]
              }
            },
            "data_stream": {
              "hidden": false
            }
          }
        }
      ],
      "data_streams": [
        {
          "name": "logs-generic-default"
        },
        {
          "name": "metrics-generic.otel-default"
        },
        {
          "name": "traces-generic-default"
        }
      ]
    }
  setup-script.sh: |
    #!/bin/bash
    set -e

    echo "Waiting for Elasticsearch to be ready..."
    until curl -s -u "${ELASTIC_USERNAME}:${ELASTIC_PASSWORD}" "http://elasticsearch-master:9200/_cluster/health" | grep -q '"status":"green\|yellow"'; do
      echo "Elasticsearch not ready yet, waiting..."
      sleep 5
    done

    echo "Elasticsearch is ready. Setting up templates and data streams..."

    # Extract templates from the JSON file
    TEMPLATES_JSON=$(cat /templates/elasticsearch-otel-templates.json)
    
    # Create logs template
    echo "Creating logs-otel index template..."
    LOGS_TEMPLATE=$(echo $TEMPLATES_JSON | jq '.index_templates[0].index_template')
    curl -X PUT -u "${ELASTIC_USERNAME}:${ELASTIC_PASSWORD}" "http://elasticsearch-master:9200/_index_template/logs-otel" \
      -H "Content-Type: application/json" \
      -d "$LOGS_TEMPLATE"
    
    # Create metrics template
    echo "Creating metrics-otel index template..."
    METRICS_TEMPLATE=$(echo $TEMPLATES_JSON | jq '.index_templates[1].index_template')
    curl -X PUT -u "${ELASTIC_USERNAME}:${ELASTIC_PASSWORD}" "http://elasticsearch-master:9200/_index_template/metrics-otel" \
      -H "Content-Type: application/json" \
      -d "$METRICS_TEMPLATE"
    
    # Create traces template
    echo "Creating traces-otel index template..."
    TRACES_TEMPLATE=$(echo $TEMPLATES_JSON | jq '.index_templates[2].index_template')
    curl -X PUT -u "${ELASTIC_USERNAME}:${ELASTIC_PASSWORD}" "http://elasticsearch-master:9200/_index_template/traces-otel" \
      -H "Content-Type: application/json" \
      -d "$TRACES_TEMPLATE"

    # Create data streams
    for STREAM in logs-generic-default metrics-generic.otel-default traces-generic-default; do
      echo "Creating data stream: $STREAM"
      curl -X PUT -u "${ELASTIC_USERNAME}:${ELASTIC_PASSWORD}" "http://elasticsearch-master:9200/_data_stream/$STREAM"
    done

    echo "Setup completed successfully!"
